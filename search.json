[{"path":"https://worldbank.github.io/blackmarbler/articles/assess-quality.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Assessing Quality of Nighttime Lights Data","text":"quality nighttime lights data can impacted number factors, particularly cloud cover. facilitate analysis using high quality data, Black Marble (1) marks quality pixel (2) cases, uses data previous date fill value—using temporally-gap filled NTL value. page illustrates examine quality nighttime lights data. Setup Nighttime lights Quality flag Nighttime lights using good quality observations Nighttime lights using good quality observations without gap filling Nighttime lights Number observations Quality Nighttime lights using good quality observations","code":""},{"path":"https://worldbank.github.io/blackmarbler/articles/assess-quality.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Assessing Quality of Nighttime Lights Data","text":"first load packages obtain polygon region interest; example, use Switzerland.","code":"library(blackmarbler) library(geodata) library(sf) library(raster) library(ggplot2) library(dplyr) library(exactextractr) library(lubridate) library(tidyr) library(geodata) library(knitr)  bearer <- \"BEARER-TOKEN-HERE\" roi_sf <- gadm(country = \"CHE\", level=0, path = tempdir()) |> st_as_sf()"},{"path":"https://worldbank.github.io/blackmarbler/articles/assess-quality.html","id":"daily-data","dir":"Articles","previous_headings":"","what":"Daily Data","title":"Assessing Quality of Nighttime Lights Data","text":"shows example examining quality daily data (VNP46A2).","code":""},{"path":"https://worldbank.github.io/blackmarbler/articles/assess-quality.html","id":"nighttime-lights","dir":"Articles","previous_headings":"Daily Data","what":"Nighttime Lights","title":"Assessing Quality of Nighttime Lights Data","text":"download data January 1st, 2023. variable parameter specified, bm_raster creates raster using Gap_Filled_DNB_BRDF-Corrected_NTL variable daily data.  notice number observations missing, poor quality gap-filled. understand extent missing date, can use following code determine (1) total number pixels cover Switzerland, (2) total number non-NA nighttime light pixels, (3) proportion non-NA pixels. default, bm_extract function computes values: figure shows trends average nighttime lights (left) proportion country value nighttime lights (right). days, low number pixels corresponds low nighttime lights (eg, January 3 5th); however, days, low number pixels corresponds higher nighttime lights (eg, January 9 10). January 3 5, missing pixels typically high-lit areas (eg, cities)—January 9 10, missing pixels typically lower-lit areas.","code":"ntl_r <- bm_raster(roi_sf = roi_sf,                    product_id = \"VNP46A2\",                    date = \"2023-01-01\",                    bearer = bearer,                    variable = \"Gap_Filled_DNB_BRDF-Corrected_NTL\") #### Prep data ntl_m_r <- ntl_r |> raster::mask(roi_sf)   ntl_df <- rasterToPoints(ntl_m_r, spatial = TRUE) |> as.data.frame() names(ntl_df) <- c(\"value\", \"x\", \"y\")  ## Distribution is skewed, so log ntl_df$value_adj <- log(ntl_df$value+1)  ##### Map  ggplot() +   geom_raster(data = ntl_df,                aes(x = x, y = y,                    fill = value_adj)) +   scale_fill_gradient2(low = \"black\",                        mid = \"yellow\",                        high = \"red\",                        midpoint = 4) +   coord_quickmap() +    theme_void() +   theme(plot.title = element_text(face = \"bold\", hjust = 0.5),         legend.position = \"none\") n_pixel <- function(values, coverage_fraction){   length(values) }  n_non_na_pixel <- function(values, coverage_fraction){   sum(!is.na(values)) }  n_pixel_num        <- exact_extract(ntl_r, roi_sf, n_pixel) n_non_na_pixel_num <- exact_extract(ntl_r, roi_sf, n_non_na_pixel)  print(n_pixel_num) #> [1] 282934 print(n_non_na_pixel_num) #> [1] 122035 print(n_non_na_pixel_num / n_pixel_num) #> [1] 0.4313197 ntl_df <- bm_extract(roi_sf = roi_sf,                      product_id = \"VNP46A2\",                    date = seq.Date(from = ymd(\"2023-01-01\"),                                    to = ymd(\"2023-01-10\"),                                    by = 1),                    bearer = bearer,                    variable = \"Gap_Filled_DNB_BRDF-Corrected_NTL\")  knitr::kable(ntl_df) ntl_df %>%   dplyr::select(date, ntl_mean, prop_non_na_pixels) %>%   pivot_longer(cols = -date) %>%      ggplot(aes(x = date,              y = value)) +    geom_line() +   facet_wrap(~name,              scales = \"free\")"},{"path":"https://worldbank.github.io/blackmarbler/articles/assess-quality.html","id":"quality","dir":"Articles","previous_headings":"Daily Data","what":"Quality","title":"Assessing Quality of Nighttime Lights Data","text":"daily data, quality values : 0: High-quality, Persistent nighttime lights 1: High-quality, Ephemeral nighttime Lights 2: Poor-quality, Outlier, potential cloud contamination, issues 255: retrieval, Fill value (masked ingestion) can map quality using Mandatory_Quality_Flag variable.","code":"quality_r <- bm_raster(roi_sf = roi_sf,                        product_id = \"VNP46A2\",                        date = \"2023-01-01\",                        bearer = bearer,                        variable = \"Mandatory_Quality_Flag\") #### Prep data quality_r <- quality_r |> mask(roi_sf)   quality_df <- rasterToPoints(quality_r, spatial = TRUE) |> as.data.frame() names(quality_df) <- c(\"value\", \"x\", \"y\")  quality_df <- quality_df %>%   dplyr::mutate(value_str = case_when(     value == 0 ~ \"0: High-quality, persistent\",     value == 1 ~ \"1: High-quality, ephemeral\",     value == 2 ~ \"2: Poor-quality\",     value == 255 ~ \"255: Fill value\"   ))  ##### Map  ggplot() +   geom_raster(data = quality_df,                aes(x = x, y = y,                    fill = value_str)) +   scale_fill_brewer(palette = \"Spectral\", direction = -1) +    labs(fill = \"Quality\") +   coord_quickmap() +    theme_void() +   theme(plot.title = element_text(face = \"bold\", hjust = 0.5))"},{"path":"https://worldbank.github.io/blackmarbler/articles/assess-quality.html","id":"nighttime-lights-for-good-quality-observations","dir":"Articles","previous_headings":"Daily Data","what":"Nighttime lights for good quality observations","title":"Assessing Quality of Nighttime Lights Data","text":"quality_flag_rm parameter determines pixels set NA based quality indicator. default, pixels value 255 filtered . However, want data good quality pixels, can adjust quality_flag_rm parameter.","code":"ntl_good_qual_r <- bm_raster(roi_sf = roi_sf,                              product_id = \"VNP46A2\",                               date = \"2023-01-01\",                              bearer = bearer,                              variable = \"Gap_Filled_DNB_BRDF-Corrected_NTL\",                              quality_flag_rm = c(2, 255)) #### Prep data ntl_good_qual_r <- ntl_good_qual_r |> mask(roi_sf)   ntl_good_qual_df <- rasterToPoints(ntl_good_qual_r, spatial = TRUE) |> as.data.frame() names(ntl_good_qual_df) <- c(\"value\", \"x\", \"y\")  ## Distribution is skewed, so log ntl_good_qual_df$value_adj <- log(ntl_good_qual_df$value+1)  ##### Map  ggplot() +   geom_raster(data = ntl_good_qual_df,                aes(x = x, y = y,                    fill = value_adj)) +   scale_fill_gradient2(low = \"black\",                        mid = \"yellow\",                        high = \"red\",                        midpoint = 4) +   coord_quickmap() +    theme_void() +   theme(plot.title = element_text(face = \"bold\", hjust = 0.5),         legend.position = \"none\")"},{"path":"https://worldbank.github.io/blackmarbler/articles/assess-quality.html","id":"nighttime-lights-for-good-quality-observations-without-gap-filling","dir":"Articles","previous_headings":"Daily Data","what":"Nighttime lights for good quality observations, without gap filling","title":"Assessing Quality of Nighttime Lights Data","text":"default, bm_raster function uses Gap_Filled_DNB_BRDF-Corrected_NTL variable daily data. Gap filling indicates poor quality pixels use data previous date; Latest_High_Quality_Retrieval indicates date nighttime lights value came .  Instead using Gap_Filled_DNB_BRDF-Corrected_NTL, ignore gap filled observations—using DNB_BRDF-Corrected_NTL variable. , also remove poor quality pixels.","code":"ntl_tmp_gap_r <- bm_raster(roi_sf = roi_sf,                            product_id = \"VNP46A2\",                            date = \"2023-01-01\",                            bearer = bearer,                            variable = \"Latest_High_Quality_Retrieval\") #### Prep data ntl_tmp_gap_r <- ntl_tmp_gap_r |> mask(roi_sf)   ntl_tmp_gap_df <- rasterToPoints(ntl_tmp_gap_r, spatial = TRUE) |> as.data.frame() names(ntl_tmp_gap_df) <- c(\"value\", \"x\", \"y\")  ##### Map  ggplot() +   geom_raster(data = ntl_tmp_gap_df,                aes(x = x, y = y,                    fill = value)) +   scale_fill_distiller(palette = \"Spectral\") +   coord_quickmap() +    theme_void() +   labs(fill = \"Temporal\\nGap\\n(Days)\",        title = \"Temporal gap between date (Jan 1, 2023)\\nand date of high quality pixel used\") +   theme(plot.title = element_text(face = \"bold\", hjust = 0.5)) ntl_r <- bm_raster(roi_sf = roi_sf,                    product_id = \"VNP46A2\",                    date = \"2023-01-01\",                    bearer = bearer,                    variable = \"DNB_BRDF-Corrected_NTL\",                    quality_flag_rm = c(2, 255)) #### Prep data ntl_r <- ntl_r |> mask(roi_sf)   ntl_df <- rasterToPoints(ntl_r, spatial = TRUE) |> as.data.frame() names(ntl_df) <- c(\"value\", \"x\", \"y\")  ## Distribution is skewed, so log ntl_df$value_adj <- log(ntl_df$value+1)  ##### Map  ggplot() +   geom_raster(data = ntl_df,                aes(x = x, y = y,                    fill = value_adj)) +   scale_fill_gradient2(low = \"black\",                        mid = \"yellow\",                        high = \"red\",                        midpoint = 4) +   coord_quickmap() +    theme_void() +   theme(plot.title = element_text(face = \"bold\", hjust = 0.5),         legend.position = \"none\")"},{"path":"https://worldbank.github.io/blackmarbler/articles/assess-quality.html","id":"monthlyannual-data","dir":"Articles","previous_headings":"","what":"Monthly/Annual Data","title":"Assessing Quality of Nighttime Lights Data","text":"shows example examining quality monthly data (VNP46A3). approach can used annual data (VNP46A4); variables monthly annual data.","code":""},{"path":"https://worldbank.github.io/blackmarbler/articles/assess-quality.html","id":"nighttime-lights-1","dir":"Articles","previous_headings":"Monthly/Annual Data","what":"Nighttime Lights","title":"Assessing Quality of Nighttime Lights Data","text":"download data January 2023. variable parameter specified, bm_raster creates raster using NearNadir_Composite_Snow_Free variable monthly annual data—nighttime lights, removing effects snow cover.","code":"ntl_r <- bm_raster(roi_sf = roi_sf,                    product_id = \"VNP46A3\",                     date = \"2023-01-01\",                    bearer = bearer,                    variable = \"NearNadir_Composite_Snow_Free\") #### Prep data ntl_r <- ntl_r |> mask(roi_sf)   ntl_df <- rasterToPoints(ntl_r, spatial = TRUE) |> as.data.frame() names(ntl_df) <- c(\"value\", \"x\", \"y\")  ## Distribution is skewed, so log ntl_df$value_adj <- log(ntl_df$value+1)  ##### Map  ggplot() +   geom_raster(data = ntl_df,                aes(x = x, y = y,                    fill = value_adj)) +   scale_fill_gradient2(low = \"black\",                        mid = \"yellow\",                        high = \"red\",                        midpoint = 4) +   coord_quickmap() +    theme_void() +   theme(plot.title = element_text(face = \"bold\", hjust = 0.5),         legend.position = \"none\")"},{"path":"https://worldbank.github.io/blackmarbler/articles/assess-quality.html","id":"number-of-observations","dir":"Articles","previous_headings":"Monthly/Annual Data","what":"Number of Observations","title":"Assessing Quality of Nighttime Lights Data","text":"Black Marble removes poor quality observations, pixels covered clouds. determine number observations used generate nighttime light values pixel, add _Num variable name.","code":"cf_r <- bm_raster(roi_sf = roi_sf,                   product_id = \"VNP46A3\",                   date = \"2023-01-01\",                   bearer = bearer,                   variable = \"NearNadir_Composite_Snow_Free_Num\") #### Prep data cf_r <- cf_r |> mask(roi_sf)   cf_df <- rasterToPoints(cf_r, spatial = TRUE) |> as.data.frame() names(cf_df) <- c(\"value\", \"x\", \"y\")  cf_df$value <- cf_df$value %>% as.factor()  ##### Map  ggplot() +   geom_raster(data = cf_df,                aes(x = x, y = y,                    fill = value)) +   scale_fill_viridis_d() +    labs(fill = \"Number of\\nObservations\") +   coord_quickmap() +    theme_void() +   theme(plot.title = element_text(face = \"bold\", hjust = 0.5))"},{"path":"https://worldbank.github.io/blackmarbler/articles/assess-quality.html","id":"quality-1","dir":"Articles","previous_headings":"Monthly/Annual Data","what":"Quality","title":"Assessing Quality of Nighttime Lights Data","text":"monthly annual data, quality values : 0: Good-quality, number observations used composite larger 3 1: Poor-quality, number observations used composite less equal 3 2: Gap filled NTL based historical data 255: Fill value can map quality adding _Quality variable name.","code":"quality_r <- bm_raster(roi_sf = roi_sf,                        product_id = \"VNP46A3\",                        date = \"2023-01-01\",                        bearer = bearer,                        variable = \"NearNadir_Composite_Snow_Free_Quality\") #### Prep data quality_r <- quality_r |> mask(roi_sf)   quality_df <- rasterToPoints(quality_r, spatial = TRUE) |> as.data.frame() names(quality_df) <- c(\"value\", \"x\", \"y\")  quality_df <- quality_df %>%   dplyr::mutate(value_str = case_when(     value == 0 ~ \"0: Good quality\",     value == 1 ~ \"1: Poor quality\",     value == 2 ~ \"2: Gap filled\",     value == 255 ~ \"255: Fill value\"   ))  ##### Map  ggplot() +   geom_raster(data = quality_df,                aes(x = x, y = y,                    fill = value_str)) +   scale_fill_brewer(palette = \"Spectral\", direction = -1) +    labs(fill = \"Quality\") +   coord_quickmap() +    theme_void() +   theme(plot.title = element_text(face = \"bold\", hjust = 0.5))"},{"path":"https://worldbank.github.io/blackmarbler/articles/assess-quality.html","id":"nighttime-lights-for-good-quality-observations-1","dir":"Articles","previous_headings":"Monthly/Annual Data","what":"Nighttime lights for good quality observations","title":"Assessing Quality of Nighttime Lights Data","text":"quality_flag_rm parameter determines pixels set NA based quality indicator. default, pixels value 255 filtered . However, also want remove poor quality pixels, can adjust quality_flag_rm parameter.","code":"ntl_good_qual_r <- bm_raster(roi_sf = roi_sf,                              product_id = \"VNP46A3\",                               date = \"2023-01-01\",                              bearer = bearer,                              variable = \"NearNadir_Composite_Snow_Free\",                              quality_flag_rm = c(1, 255)) #### Prep data ntl_good_qual_r <- ntl_good_qual_r |> mask(roi_sf)   ntl_good_qual_df <- rasterToPoints(ntl_good_qual_r, spatial = TRUE) |> as.data.frame() names(ntl_good_qual_df) <- c(\"value\", \"x\", \"y\")  ## Distribution is skewed, so log ntl_good_qual_df$value_adj <- log(ntl_good_qual_df$value+1)  ##### Map  ggplot() +   geom_raster(data = ntl_good_qual_df,                aes(x = x, y = y,                    fill = value_adj)) +   scale_fill_gradient2(low = \"black\",                        mid = \"yellow\",                        high = \"red\",                        midpoint = 4) +   coord_quickmap() +    theme_void() +   theme(plot.title = element_text(face = \"bold\", hjust = 0.5),         legend.position = \"none\")"},{"path":"https://worldbank.github.io/blackmarbler/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Robert Marty. Author, maintainer. Gabriel Stefanini Vicente. Author.","code":""},{"path":"https://worldbank.github.io/blackmarbler/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Marty R, Stefanini Vicente G (2023). blackmarbler: Black Marble Data Statistics. R package version 0.1.0, https://worldbank.github.io/blackmarbler/.","code":"@Manual{,   title = {blackmarbler: Black Marble Data and Statistics},   author = {Robert Marty and Gabriel {Stefanini Vicente}},   year = {2023},   note = {R package version 0.1.0},   url = {https://worldbank.github.io/blackmarbler/}, }"},{"path":"https://worldbank.github.io/blackmarbler/index.html","id":"blackmarbler-","dir":"","previous_headings":"","what":"Black Marble Data and Statistics","title":"Black Marble Data and Statistics","text":"BlackMarbleR provides simple efficient way retrieve extract nighttime lights data NASA’s Black Marble project. Black Marble NASA Earth Observatory project provides product suite daily, monthly yearly global nighttime lights. package automates process downloading relevant tiles NASA LAADS archive cover region interest, converting raw files (HDF5 format), georeferenced rasters, mosaicing rasters together needed. Installation Bearer token Setup Make raster Make raster stack across multiple time periods Make map Make figure trends nighttime lights Workflow update data Functions Required Arguments Optional Arguments Argument bm_extract","code":""},{"path":"https://worldbank.github.io/blackmarbler/index.html","id":"installation-","dir":"","previous_headings":"","what":"Installation","title":"Black Marble Data and Statistics","text":"package can installed via CRAN. install development version Github:","code":"install.packages(\"blackmarbler\") # install.packages(\"devtools\") devtools::install_github(\"dime-worldbank/blackmarbler\")"},{"path":"https://worldbank.github.io/blackmarbler/index.html","id":"bearer-token-","dir":"","previous_headings":"","what":"Bearer Token","title":"Black Marble Data and Statistics","text":"function requires using Bearer Token; obtain token, follow steps: Go NASA LAADS Archive Click “Login” (bottom top right); create account needed. Click “See wget Download Command” (bottom near top, middle) clicking, see text can used download data. “Bearer” token long string red. logging , show bearer token red instead INSERT_DOWNLOAD_TOKEN_HERE. Sometimes, logging , NASA website redirect another part website. obtain bearer token, just navigate NASA LAADS Archive logging .","code":""},{"path":[]},{"path":"https://worldbank.github.io/blackmarbler/index.html","id":"setup-","dir":"","previous_headings":"Usage","what":"Setup","title":"Black Marble Data and Statistics","text":"downloading extracting Black Marble data, first load packages, define NASA bearer token, define region interest.","code":"#### Setup # Load packages library(blackmarbler) library(geodata) library(sf) library(raster) library(ggplot2)  #### Define NASA bearer token bearer <- \"BEARER-TOKEN-HERE\"  ### ROI # Define region of interest (roi). The roi must be (1) an sf polygon and (2) # in the WGS84 (epsg:4326) coordinate reference system. Here, we use the # getData function to load a polygon of Ghana roi_sf <- gadm(country = \"GHA\", level=1, path = tempdir()) |> st_as_sf()"},{"path":"https://worldbank.github.io/blackmarbler/index.html","id":"make-raster-of-nighttime-lights-","dir":"","previous_headings":"Usage","what":"Make raster of nighttime lights","title":"Black Marble Data and Statistics","text":"example shows making daily, monthly, annual rasters nighttime lights Ghana.","code":"### Daily data: raster for February 5, 2021 r_20210205 <- bm_raster(roi_sf = roi_sf,                         product_id = \"VNP46A2\",                         date = \"2021-02-05\",                         bearer = bearer)  ### Monthly data: raster for October 2021 r_202110 <- bm_raster(roi_sf = roi_sf,                       product_id = \"VNP46A3\",                       date = \"2021-10-01\", # The day is ignored                       bearer = bearer)  ### Annual data: raster for 2021 r_2021 <- bm_raster(roi_sf = roi_sf,                     product_id = \"VNP46A4\",                     date = 2021,                     bearer = bearer)"},{"path":"https://worldbank.github.io/blackmarbler/index.html","id":"make-raster-stack-of-nighttime-lights-across-multiple-time-periods-","dir":"","previous_headings":"Usage","what":"Make raster stack of nighttime lights across multiple time periods","title":"Black Marble Data and Statistics","text":"extract data multiple time periods, add multiple time periods date. function return raster stack, raster band corresponds different date. code provides examples getting data across multiple days, months, years.","code":"#### Daily data in March 2021 r_daily <- bm_raster(roi_sf = roi_sf,                      product_id = \"VNP46A3\",                      date = seq.Date(from = ymd(\"2021-03-01\"), to = ymd(\"2021-03-31\"), by = \"day\"),                      bearer = bearer)  #### Monthly aggregated data in 2021 and 2022 r_monthly <- bm_raster(roi_sf = roi_sf,                        product_id = \"VNP46A3\",                        date = seq.Date(from = ymd(\"2021-01-01\"), to = ymd(\"2022-12-01\"), by = \"month\"),                        bearer = bearer)  #### Yearly aggregated data in 2012 and 2021 r_annual <- bm_raster(roi_sf = roi_sf,                       product_id = \"VNP46A4\",                       date = 2012:2021,                       bearer = bearer)"},{"path":"https://worldbank.github.io/blackmarbler/index.html","id":"map-of-nighttime-lights-","dir":"","previous_headings":"Usage","what":"Map of nighttime lights","title":"Black Marble Data and Statistics","text":"Using one rasters, can make map nighttime lights","code":"#### Make raster r <- bm_raster(roi_sf = roi_sf,                product_id = \"VNP46A3\",                date = \"2021-10-01\",                bearer = bearer)  #### Prep data r <- r |> mask(roi_sf)  r_df <- rasterToPoints(r, spatial = TRUE) |> as.data.frame() names(r_df) <- c(\"value\", \"x\", \"y\")  ## Remove very low values of NTL; can be considered noise r_df$value[r_df$value <= 2] <- 0  ## Distribution is skewed, so log r_df$value_adj <- log(r_df$value+1)  ##### Map p <- ggplot() +   geom_raster(data = r_df,   aes(x = x, y = y,   fill = value_adj)) +   scale_fill_gradient2(low = \"black\",                        mid = \"yellow\",                        high = \"red\",                        midpoint = 4.5) +   labs(title = \"Nighttime Lights: October 2021\") +   coord_quickmap() +   theme_void() +   theme(plot.title = element_text(face = \"bold\", hjust = 0.5),   legend.position = \"none\")"},{"path":"https://worldbank.github.io/blackmarbler/index.html","id":"trends-over-time-","dir":"","previous_headings":"Usage","what":"Trends over time","title":"Black Marble Data and Statistics","text":"can use bm_extract function observe changes nighttime lights time. bm_extract function leverages exactextractr package aggregate nighttime lights data polygons. show trends annual nighttime lights data across Ghana’s first administrative divisions.","code":"#### Extract annual data ntl_df <- bm_extract(roi_sf = roi_sf,                      product_id = \"VNP46A4\",                      date = 2012:2022,                      bearer = bearer)  #### Trends over time ntl_df |>   ggplot() +   geom_col(aes(x = date,   y = ntl_mean),   fill = \"darkorange\") +   facet_wrap(~NAME_1) +   labs(x = NULL,        y = \"NTL Luminosity\",        title = \"Ghana Admin Level 1: Annual Average Nighttime Lights\") +   theme_minimal() +   theme(strip.text = element_text(face = \"bold\"))"},{"path":"https://worldbank.github.io/blackmarbler/index.html","id":"workflow-to-update-data-","dir":"","previous_headings":"Usage","what":"Workflow to update data","title":"Black Marble Data and Statistics","text":"users may want monitor near-real-time changes nighttime lights. example, daily Black Marble nighttime lights data updated regularly, data available roughly week delay; use cases may require examining trends daily nighttime lights data new data becomes available. shows example code regularly run produce updated daily dataset nighttime lights. code produces dataframe nighttime lights date, average nighttime lights Ghana’s 1st administrative division produced. code check whether data already downloaded/extracted specific date, download/extract new data.","code":"# Create directories to store data dir.create(file.path(getwd(), \"bm_files\")) dir.create(file.path(getwd(), \"bm_files\", \"daily\"))  # Extract daily-level nighttime lights data for Ghana's first administrative divisions. # Save a separate dataset for each date in the `\"~/Desktop/bm_files/daily\"` directory. # The code extracts data from January 1, 2023 to today. Given that daily nighttime lights # data is produced on roughly a week delay, the function will only extract data that exists; # it will skip extracting data for dates where data has not yet been produced by NASA Black Marble. bm_extract(roi_sf = roi_sf,            product_id = \"VNP46A2\",            date = seq.Date(from = ymd(\"2023-01-01\"), to = Sys.Date(), by = 1),            bearer = bearer,            output_location_type = \"file\",            file_dir = file.path(getwd(), \"bm_files\", \"daily\"))  # Append daily-level datasets into one file file.path(getwd(), \"bm_files\", \"daily\") |>   list.files(pattern = \"*.Rds\",   full.names = T) |>   map_df(readRDS) |>   saveRDS(file.path(getwd(), \"bm_files\", \"ntl_daily.Rds\"))"},{"path":[]},{"path":"https://worldbank.github.io/blackmarbler/index.html","id":"functions-","dir":"","previous_headings":"Functions and arguments","what":"Functions","title":"Black Marble Data and Statistics","text":"package provides two functions. bm_raster produces raster Black Marble nighttime lights. bm_extract produces dataframe aggregated nighttime lights region interest (e.g., average nighttime lights within US States). functions take following arguments:","code":""},{"path":"https://worldbank.github.io/blackmarbler/index.html","id":"required-arguments-","dir":"","previous_headings":"Functions and arguments","what":"Required arguments","title":"Black Marble Data and Statistics","text":"roi_sf: Region interest; sf polygon. Must WGS 84 (epsg:4326) coordinate reference system. bm_extract, aggregates nighttime lights within polygon roi_sf. product_id: One following: \"VNP46A1\": Daily (raw) \"VNP46A2\": Daily (corrected) \"VNP46A3\": Monthly \"VNP46A4\": Annual date: Date raster data. Entering one date produce raster. Entering multiple dates produce raster stack. product_ids \"VNP46A1\" \"VNP46A2\", date (eg, \"2021-10-03\"). product_id \"VNP46A3\", date year-month (e.g., \"2021-10-01\", day ignored, \"2021-10\"). product_id \"VNP46A4\", year date (e.g., \"2021-10-01\", month day ignored, 2021). bearer: NASA bearer token. instructions create token, see .","code":""},{"path":"https://worldbank.github.io/blackmarbler/index.html","id":"optional-arguments-","dir":"","previous_headings":"Functions and arguments","what":"Optional arguments","title":"Black Marble Data and Statistics","text":"variable: Variable used create raster (default: NULL). information variable choices, see ; VNP46A1, see Table 3; VNP46A2 see Table 6; VNP46A3 VNP46A4, see Table 9. NULL, uses following default variables: product_id \"VNP46A1\", uses DNB_At_Sensor_Radiance_500m. product_id \"VNP46A2\", uses Gap_Filled_DNB_BRDF-Corrected_NTL. product_ids \"VNP46A3\" \"VNP46A4\", uses NearNadir_Composite_Snow_Free. quality_flag_rm: Quality flag values use set values NA. pixel quality flag value, low quality values can removed. Values set NA value ther quality_flag_rm vector. (Default: c(255)). 0: High-quality, Persistent nighttime lights 1: High-quality, Ephemeral nighttime Lights 2: Poor-quality, Outlier, potential cloud contamination, issues 255: retrieval, Fill value (masked ingestion) 0: Good-quality, number observations used composite larger 3 1: Poor-quality, number observations used composite less equal 3 2: Gap filled NTL based historical data 255: Fill value output_location_type: output stored (default: r_memory). Either: r_memory function return output R file function export data file. bm_raster, .tif file saved; bm_extract, .Rds file saved. file saved date. Consequently, date = c(2018, 2019, 2020), three datasets saved: one year. Saving dataset date can facilitate re-running function later downloading data dates data downloaded. output_location_type = \"file\", following arguments can used: file_dir: directory data exported (default: NULL, working directory used) file_prefix: Prefix add file saved. file saved following: [file_prefix][product_id]_t[date].[tif/Rds] file_skip_if_exists: Whether function first check wither file already exists, skip downloading extracting data data date file already exists (default: TRUE). function first run date = c(2018, 2019, 2020), later run date = c(2018, 2019, 2020, 2021), function download/extract data 2021. Skipping existing files can facilitate re-running function later date download recent data.","code":""},{"path":"https://worldbank.github.io/blackmarbler/index.html","id":"argument-for-bm_extract-only-","dir":"","previous_headings":"Functions and arguments","what":"Argument for bm_extract only","title":"Black Marble Data and Statistics","text":"aggregation_fun: vector functions aggregate data (default: \"mean\"). exact_extract function exactextractr package used aggregations; parameter passed fun argument exactextractr::exact_extract. add_n_pixels: Whether add variable indicating number nighttime light pixels used compute nighttime lights statistics (eg, number pixels used compute average nighttime lights). TRUE, adds three values: n_non_na_pixels (number non-NA pixels used computing nighttime light statistics); n_pixels (total number pixels); prop_non_na_pixels proportion two. (Default: TRUE).","code":""},{"path":"https://worldbank.github.io/blackmarbler/reference/bm_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract and Aggregate Black Marble Data — bm_extract","title":"Extract and Aggregate Black Marble Data — bm_extract","text":"Extract aggregate nighttime lights data NASA Black Marble data","code":""},{"path":"https://worldbank.github.io/blackmarbler/reference/bm_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract and Aggregate Black Marble Data — bm_extract","text":"","code":"bm_extract(   roi_sf,   product_id,   date,   bearer,   aggregation_fun = c(\"mean\"),   add_n_pixels = TRUE,   variable = NULL,   quality_flag_rm = 255,   check_all_tiles_exist = TRUE,   output_location_type = \"memory\",   file_dir = NULL,   file_prefix = NULL,   file_skip_if_exists = TRUE,   quiet = FALSE )"},{"path":"https://worldbank.github.io/blackmarbler/reference/bm_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract and Aggregate Black Marble Data — bm_extract","text":"roi_sf Region interest; sf polygon. Must WGS 84 (epsg:4326) coordinate reference system. product_id One following: \"VNP46A1\": Daily (raw) \"VNP46A2\": Daily (corrected) \"VNP46A3\": Monthly \"VNP46A4\": Annual date Date raster data. Entering one date produce raster. Entering multiple dates produce raster stack. product_ids \"VNP46A1\" \"VNP46A2\", date (eg, \"2021-10-03\"). product_id \"VNP46A3\", date year-month (e.g., \"2021-10-01\", day ignored, \"2021-10\"). product_id \"VNP46A4\", year date  (e.g., \"2021-10-01\", month day ignored, 2021). bearer NASA bearer token. instructions create token, see . aggregation_fun Function used aggregate nighttime lights data polygons; values passed fun argument exactextractr::exact_extract (Default: mean). add_n_pixels Whether add variable indicating number nighttime light pixels used compute nighttime lights statistics (eg, number pixels used compute average nighttime lights). TRUE, adds three values: n_non_na_pixels (number non-NA pixels used computing nighttime light statistics); n_pixels (total number pixels); prop_non_na_pixels proportion two. (Default: TRUE). variable Variable used create raster (default: NULL). NULL, uses following default variables: product_id :VNP46A1\", uses DNB_At_Sensor_Radiance_500m. product_id \"VNP46A2\", uses Gap_Filled_DNB_BRDF-Corrected_NTL. product_ids \"VNP46A3\" \"VNP46A4\", uses NearNadir_Composite_Snow_Free. information variable choices, see ; VNP46A1, see Table 3; VNP46A2 see Table 6; VNP46A3 VNP46A4, see Table 9. quality_flag_rm Quality flag values use set values NA. pixel quality flag value, low quality values can removed. Values set NA value ther quality_flag_rm vector. (Default: c(255)). VNP46A1 VNP46A2 (daily data): 0: High-quality, Persistent nighttime lights 1: High-quality, Ephemeral nighttime Lights 2: Poor-quality, Outlier, potential cloud contamination, issues 255: retrieval, Fill value (masked ingestion) VNP46A3 VNP46A4 (monthly annual data): 0: Good-quality, number observations used composite larger 3 1: Poor-quality, number observations used composite less equal 3 2: Gap filled NTL based historical data 255: Fill value check_all_tiles_exist Check whether Black Marble nighttime light tiles exist region interest. Sometimes tiles available, full region interest may covered. TRUE, skips cases tiles available. (Default: TRUE). output_location_type produce output; either memory file. memory, functions returns raster R. file, function exports .tif file returns NULL. output_location_type = file: file_dir directory data exported (default: NULL, working directory used) file_prefix Prefix add file saved. file saved following: [file_prefix][product_id]_t[date].tif file_skip_if_exists Whether function first check wither file already exists, skip downloading extracting data data date file already exists (default: TRUE). quiet Suppress output show downloading progress messages. (Default: FALSE).","code":""},{"path":"https://worldbank.github.io/blackmarbler/reference/bm_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract and Aggregate Black Marble Data — bm_extract","text":"Raster","code":""},{"path":"https://worldbank.github.io/blackmarbler/reference/bm_extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract and Aggregate Black Marble Data — bm_extract","text":"","code":"if (FALSE) { # Define bearer token bearer <- \"BEARER-TOKEN-HERE\"  # sf polygon of Ghana library(geodata) roi_sf <- gadm(country = \"GHA\", level=1, path = tempdir()) %>% st_as_sf()  # Daily data: raster for October 3, 2021 ken_20210205_r <- bm_extract(roi_sf = roi_sf,                             product_id = \"VNP46A2\",                             date = \"2021-10-03\",                             bearer = bearer)  # Monthly data: raster for March 2021 ken_202103_r <- bm_extract(roi_sf = roi_sf,                           product_id = \"VNP46A3\",                           date = \"2021-03-01\",                           bearer = bearer)  # Annual data: raster for 2021 ken_2021_r <- bm_extract(roi_sf = roi_sf,                         product_id = \"VNP46A4\",                         date = 2021,                         bearer = bearer) }"},{"path":"https://worldbank.github.io/blackmarbler/reference/bm_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Black Marble Raster — bm_raster","title":"Make Black Marble Raster — bm_raster","text":"Make raster nighttime lights NASA Black Marble data","code":""},{"path":"https://worldbank.github.io/blackmarbler/reference/bm_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Black Marble Raster — bm_raster","text":"","code":"bm_raster(   roi_sf,   product_id,   date,   bearer,   variable = NULL,   quality_flag_rm = 255,   check_all_tiles_exist = TRUE,   output_location_type = \"memory\",   file_dir = NULL,   file_prefix = NULL,   file_skip_if_exists = TRUE,   quiet = FALSE )"},{"path":"https://worldbank.github.io/blackmarbler/reference/bm_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Black Marble Raster — bm_raster","text":"roi_sf Region interest; sf polygon. Must WGS 84 (epsg:4326) coordinate reference system. product_id One following: \"VNP46A1\": Daily (raw) \"VNP46A2\": Daily (corrected) \"VNP46A3\": Monthly \"VNP46A4\": Annual date Date raster data. Entering one date produce raster. Entering multiple dates produce raster stack. product_ids \"VNP46A1\" \"VNP46A2\", date (eg, \"2021-10-03\"). product_id \"VNP46A3\", date year-month (e.g., \"2021-10-01\", day ignored, \"2021-10\"). product_id \"VNP46A4\", year date  (e.g., \"2021-10-01\", month day ignored, 2021). bearer NASA bearer token. instructions create token, see . variable Variable used create raster (default: NULL). NULL, uses following default variables: product_id :VNP46A1\", uses DNB_At_Sensor_Radiance_500m. product_id \"VNP46A2\", uses Gap_Filled_DNB_BRDF-Corrected_NTL. product_ids \"VNP46A3\" \"VNP46A4\", uses NearNadir_Composite_Snow_Free. information variable choices, see ; VNP46A1, see Table 3; VNP46A2 see Table 6; VNP46A3 VNP46A4, see Table 9. quality_flag_rm Quality flag values use set values NA. pixel quality flag value, low quality values can removed. Values set NA value ther quality_flag_rm vector. (Default: c(255)). VNP46A1 VNP46A2 (daily data): 0: High-quality, Persistent nighttime lights 1: High-quality, Ephemeral nighttime Lights 2: Poor-quality, Outlier, potential cloud contamination, issues 255: retrieval, Fill value (masked ingestion) VNP46A3 VNP46A4 (monthly annual data): 0: Good-quality, number observations used composite larger 3 1: Poor-quality, number observations used composite less equal 3 2: Gap filled NTL based historical data 255: Fill value check_all_tiles_exist Check whether Black Marble nighttime light tiles exist region interest. Sometimes tiles available, full region interest may covered. TRUE, skips cases tiles available. (Default: TRUE). output_location_type produce output; either memory file. memory, functions returns raster R. file, function exports .tif file returns NULL. output_location_type = file: file_dir directory data exported (default: NULL, working directory used) file_prefix Prefix add file saved. file saved following: [file_prefix][product_id]_t[date].tif file_skip_if_exists Whether function first check wither file already exists, skip downloading extracting data data date file already exists (default: TRUE). quiet Suppress output show downloading progress messages. (Default: FALSE).","code":""},{"path":"https://worldbank.github.io/blackmarbler/reference/bm_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Black Marble Raster — bm_raster","text":"Raster","code":""},{"path":"https://worldbank.github.io/blackmarbler/reference/bm_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Black Marble Raster — bm_raster","text":"","code":"if (FALSE) { # Define bearer token bearer <- \"BEARER-TOKEN-HERE\"  # sf polygon of Ghana library(geodata) roi_sf <- gadm(country = \"GHA\", level=0, path = tempdir()) %>% st_as_sf()  # Daily data: raster for October 3, 2021 ken_20210205_r <- bm_raster(roi_sf = roi_sf,                             product_id = \"VNP46A2\",                             date = \"2021-10-03\",                             bearer = bearer)  # Monthly data: raster for March 2021 ken_202103_r <- bm_raster(roi_sf = roi_sf,                           product_id = \"VNP46A3\",                           date = \"2021-03-01\",                           bearer = bearer)  # Annual data: raster for 2021 ken_2021_r <- bm_raster(roi_sf = roi_sf,                         product_id = \"VNP46A4\",                         date = 2021,                         bearer = bearer) }"}]
